version: '3.8'

services:
  enterprise-api:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
      - ConnectionStrings__DefaultConnection=Server=enterprise-postgres;Database=enterprise_db;Username=enterprise_user;Password=enterprise_pass123
      - Redis__ConnectionString=enterprise-redis:6379
    depends_on:
      - enterprise-postgres
      - enterprise-redis
    networks:
      - enterprise-network
    restart: unless-stopped

  enterprise-postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=enterprise_db
      - POSTGRES_USER=enterprise_user
      - POSTGRES_PASSWORD=enterprise_pass123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Docker/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - enterprise-network
    restart: unless-stopped

  enterprise-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - enterprise-network
    restart: unless-stopped

  enterprise-php-admin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=enterprise-postgres
      - PMA_PORT=5432
      - PMA_USER=enterprise_user
      - PMA_PASSWORD=enterprise_pass123
    ports:
      - "8080:80"
    depends_on:
      - enterprise-postgres
    networks:
      - enterprise-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  enterprise-network:
    driver: bridge
